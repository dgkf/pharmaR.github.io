Metric	Reason for Inclusion
Maturity (package)	"The longer a package has been in existence, the more exposure it has had to community testing"
Maturity (version)	"When measuring package maturity, it is also important to consider the version maturity.  The more recent a version, the less exposure it has had to community testing"
Average downloads in past 12 months (all versions)	The more times a package has been downloaded the more extensive the user testing and the greater chance there is of someone finding a bug and logging it.  
Implements a standard unit-testing framework	"The three standard R unit-testing frameworks are testthat, RUnit and svUnit.  It is good practice to adopt one of these frameworks in order to write unit tests.  A user may implement their own framework but this increases the risk of error."
Code coverage	"For packages that implement a test framework, it is possible to use the R package, covr, to work out the proportion of the source code covered by these tests.  Although there are an infinite number of ways of testing code, a 100\% covr score would mean that every line of source code is at least called when running the tests."
Package available from CRAN or Bioconductor	"CRAN and Bioconductor are the two standard public repositories for R packages.  To publish a package on these repositories, a package maintainer must ensure that the package passes a series of technical checks including the \'R CMD check\'.  Packages on GitHub and other popular public repositories are not required to meet these checks and pose a greater risk."
Number of reverse dependencies	A high number of reverse dependencies increases the indirect exposure of the package and reduces the risk of error
